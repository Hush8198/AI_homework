{
  "math_calculator": "    def execute_math_calculator(params):\n        import re\n        \n        try:\n            # 参数验证\n            expression = params.get('expression', '').strip()\n            if not expression:\n                return \"错误：请输入数学表达式\"\n                \n            # 安全验证（只允许基本数学运算符和数字）\n            if not re.match(r'^[\\d+\\-*/(). ]+$', expression):\n                return \"错误：表达式包含非法字符\"\n                \n            # 计算前安全检查\n            if any(cmd in expression.lower() for cmd in ['import', 'exec', 'eval', 'open']):\n                return \"错误：表达式包含不安全操作\"\n                \n            # 执行计算\n            result = eval(expression)\n            return f\"计算结果: {result}\"\n            \n        except ZeroDivisionError:\n            return \"错误：除数不能为零\"\n        except SyntaxError:\n            return \"错误：无效的数学表达式\"\n        except Exception as e:\n            return f\"计算错误: {str(e)}\"\n    ",
  "get_page_title": "def execute_get_page_title(params):\n    import requests\n    from bs4 import BeautifulSoup\n    from urllib.parse import urlparse\n    \n    try:\n        url = params.get('url')\n        if not url:\n            return \"Error: URL parameter is missing\"\n            \n        # Validate URL format\n        parsed = urlparse(url)\n        if not all([parsed.scheme, parsed.netloc]):\n            return \"Error: Invalid URL format\"\n            \n        headers = {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'\n        }\n        \n        response = requests.get(url, headers=headers, timeout=10)\n        response.raise_for_status()\n        \n        # Handle encoding properly\n        if response.encoding is None:\n            response.encoding = 'utf-8'\n            \n        soup = BeautifulSoup(response.text, 'html.parser')\n        title = soup.title.string if soup.title else None\n        \n        if title:\n            return title.strip()\n        else:\n            return \"Error: No title found on the webpage\"\n            \n    except requests.exceptions.RequestException as e:\n        return f\"Error: Failed to retrieve webpage - {str(e)}\"\n    except Exception as e:\n        return f\"Error: An unexpected error occurred - {str(e)}\"",
  "create_file": "def execute_create_file(params):\n    import os\n    \n    try:\n        file_name = params.get('file_name', '2.txt')\n        \n        # ç¡®ä¿æä»¶åææ\n        if not isinstance(file_name, str):\n            return \"Error: file_name must be a string\"\n            \n        # é²æ­¢ç®å½éåæ»å»\n        base_name = os.path.basename(file_name)\n        if base_name != file_name:\n            return \"Error: file_name cannot contain path separators\"\n            \n        # åå»ºæä»¶\n        try:\n            with open(file_name, 'w', encoding='utf-8') as f:\n                pass\n            return f\"Successfully created file: {file_name}\"\n        except IOError as e:\n            return f\"Error creating file: {str(e)}\"\n        except UnicodeEncodeError:\n            return \"Error: file name contains invalid characters\"\n            \n    except Exception as e:\n        return f\"Unexpected error: {str(e)}\""
}