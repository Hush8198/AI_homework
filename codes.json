{
  "math_calculator": "def execute_math_calculator(expression: str) -> str:\n    try:\n        allowed_chars = set('0123456789+-*/(). ')\n        if not all(c in allowed_chars for c in expression):\n            return \"❌ 表达式包含非法字符\"\n        return str(eval(expression))\n    except Exception as e:\n        return f\"❌ 计算错误: {str(e)}\"\n",
  "get_page_title": "def execute_get_page_title(params):\n    import requests\n    from bs4 import BeautifulSoup\n    from urllib.parse import urlparse\n    \n    url = params.get('url')\n    if not url:\n        return \"Error: URL parameter is required\"\n    \n    try:\n        headers = {\n            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'\n        }\n        \n        response = requests.get(url, headers=headers, timeout=10)\n        response.raise_for_status()\n        \n        # Handle encoding\n        if response.encoding == 'ISO-8859-1':\n            response.encoding = response.apparent_encoding or 'utf-8'\n        \n        soup = BeautifulSoup(response.text, 'html.parser')\n        title = soup.title.string.strip() if soup.title else \"No title found\"\n        \n        return title\n    \n    except requests.exceptions.RequestException as e:\n        return f\"Error fetching URL: {str(e)}\"\n    except Exception as e:\n        return f\"Error processing page: {str(e)}\"",
  "create_file": "def execute_create_file(input_param):\n    import os\n    \n    try:\n        if not isinstance(input_param, str):\n            return \"Error: Input parameter must be a string\"\n            \n        if input_param != \"2.txt\":\n            return \"Error: This function only creates '2.txt' file\"\n            \n        file_path = os.path.join(os.getcwd(), input_param)\n        \n        if os.path.exists(file_path):\n            return f\"Error: File '{input_param}' already exists\"\n            \n        with open(file_path, 'w', encoding='utf-8') as f:\n            f.write('')\n            \n        return f\"Successfully created file: {input_param}\"\n        \n    except PermissionError:\n        return \"Error: Permission denied when trying to create file\"\n    except OSError as e:\n        return f\"Error: OS error occurred - {str(e)}\"\n    except Exception as e:\n        return f\"Error: An unexpected error occurred - {str(e)}\""
}